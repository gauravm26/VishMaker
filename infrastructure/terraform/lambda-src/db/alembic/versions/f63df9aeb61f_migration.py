"""Migration

Revision ID: f63df9aeb61f
Revises: 06f7437a67be
Create Date: 2025-04-06 01:08:15.710701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f63df9aeb61f'
down_revision: Union[str, None] = '06f7437a67be'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, add all indexes and unique constraints for parent tables
    op.create_index(op.f('ix_user_flows_uiid'), 'user_flows', ['uiid'], unique=True)
    op.create_index(op.f('ix_high_level_requirements_uiid'), 'high_level_requirements', ['uiid'], unique=True)
    op.create_index(op.f('ix_low_level_requirements_uiid'), 'low_level_requirements', ['uiid'], unique=True)
    op.create_index(op.f('ix_test_cases_uiid'), 'test_cases', ['uiid'], unique=True)
    
    # Now add the NOT NULL constraints for parent_uiid fields
    op.alter_column('high_level_requirements', 'parent_uiid',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('low_level_requirements', 'parent_uiid',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('test_cases', 'parent_uiid',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
               
    # Add indexes for parent_uiid fields
    op.create_index(op.f('ix_high_level_requirements_parent_uiid'), 'high_level_requirements', ['parent_uiid'], unique=False)
    op.create_index(op.f('ix_low_level_requirements_parent_uiid'), 'low_level_requirements', ['parent_uiid'], unique=False)
    op.create_index(op.f('ix_test_cases_parent_uiid'), 'test_cases', ['parent_uiid'], unique=False)
    
    # Finally add the foreign key constraints once the unique indexes are in place
    op.create_foreign_key(None, 'high_level_requirements', 'user_flows', ['parent_uiid'], ['uiid'])
    op.create_foreign_key(None, 'low_level_requirements', 'high_level_requirements', ['parent_uiid'], ['uiid'])
    op.create_foreign_key(None, 'test_cases', 'low_level_requirements', ['parent_uiid'], ['uiid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_flows_uiid'), table_name='user_flows')
    op.drop_constraint(None, 'test_cases', type_='foreignkey')
    op.drop_index(op.f('ix_test_cases_uiid'), table_name='test_cases')
    op.drop_index(op.f('ix_test_cases_parent_uiid'), table_name='test_cases')
    op.alter_column('test_cases', 'parent_uiid',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(None, 'low_level_requirements', type_='foreignkey')
    op.drop_index(op.f('ix_low_level_requirements_uiid'), table_name='low_level_requirements')
    op.drop_index(op.f('ix_low_level_requirements_parent_uiid'), table_name='low_level_requirements')
    op.alter_column('low_level_requirements', 'parent_uiid',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(None, 'high_level_requirements', type_='foreignkey')
    op.drop_index(op.f('ix_high_level_requirements_uiid'), table_name='high_level_requirements')
    op.drop_index(op.f('ix_high_level_requirements_parent_uiid'), table_name='high_level_requirements')
    op.alter_column('high_level_requirements', 'parent_uiid',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    # ### end Alembic commands ###
